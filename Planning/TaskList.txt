22-12-2015:
	- Create a preliminary plan
	  COMPLETE
	- Create a task list
	  COMPLETE
	- Set up git and github repository for work
	  COMPLETE

22-12-2015:
	- Research and determine the best way to use FreeCAD in this project
	+ Export Drawings from FreeCAD as mesh type with .obj extension. This creates a very simple surface mesh format.
	  COMPLETE

22-12-2015:
	- Design a robot for testing purposes
	  COMPLETE
	+ Created a very simple 3 DOF arm.
	- Model testing robot in FreeCAD
	  COMPLETE

?:
	- Design and implement bare-bones versions of the SerialLink and Environment classes.
	  INCOMPLETE(50%)

10-1-2016:
	- Investigate using PyOpenGL to create a graphical simulation of the robot
	COMPLETE
	- Design a system for viewing the robot.
	+ See Notes.txt
	COMPLETE

?:
	- Create a logo for the project
	INCOMPLETE(50%)

10-1-2016:
	- Implement the Workspace class and get it to display the floor
	+ Implemented the Workspace class, need a function to view it now.
	COMPLETE

10-1-2016:
	- Finish implementation of a graphical body class that the link class will inherit from.
	COMPLETE

18-1-2016:
    - Figure out the best format for running tests on the package
    + Will use pytest in the test/ directory
    COMPLETE

1-2-2016:
    - Write some tests to test the graphical capabilities of the program
    COMPLETE

?:
    - Create the robot and objects from the logo and take a snapshot
    INCOMPLETE

?:
    - Write more shape classes in armech/graphics/shapes.py and test them
    INCOMPLETE(50%)

18-1-2016:
    - Implement a PhysicalBody / DynamicBody class that has mass and intertia properties.
    COMPLETE

3-2-2016:
    - Remove all edges from shape and use lighting instead.
    COMPLETE

11-2-2016:
    - Figure out how to make the workspace viewer work for testing (accept user input)
    COMPLETE
    + Need to create a callback like dictionary and allow subclasses or instances
      to add functions to.
    - Implement test viewer and fail tests properly
    COMPLETE

?:
    - Import a basic robot and see that it moves to the correct positions when
      given angles from the user.
    INCOMPLETE
    - Write some tests to confirm that the end effector is ending up where
      it needs to be
    INCOMPLETE